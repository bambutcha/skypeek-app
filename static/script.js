let lastCity = null;

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ—Ä–æ–¥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async function() {
    await loadLastCity();
    await loadSearchHistory();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
document.getElementById('weather-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const city = document.getElementById('city-input').value.trim();
    if (!city) {
        showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞');
        return;
    }
    
    await searchWeather(city);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞
document.getElementById('use-last-city-btn').addEventListener('click', async function() {
    if (lastCity) {
        document.getElementById('city-input').value = lastCity;
        await searchWeather(lastCity);
        hideLastCitySuggestion();
    }
});

document.getElementById('dismiss-suggestion-btn').addEventListener('click', function() {
    hideLastCitySuggestion();
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–≥–æ–¥—ã
async function searchWeather(city) {
    showLoading();
    
    try {
        const response = await fetch(`/api/weather?city=${encodeURIComponent(city)}`);
        
        if (!response.ok) {
            const error = await response.json();
            throw new Error(error.detail || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
        }
        
        const weatherData = await response.json();
        showWeather(weatherData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        await loadSearchHistory();
        
    } catch (error) {
        showError(error.message);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞
async function loadLastCity() {
    try {
        const response = await fetch('/api/last-city');
        const data = await response.json();
        
        if (data.last_city) {
            lastCity = data.last_city;
            showLastCitySuggestion(data.last_city, data.searched_at);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
async function loadSearchHistory() {
    try {
        const response = await fetch('/api/history');
        const history = await response.json();
        
        if (history.length > 0) {
            showSearchHistory(history);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
    }
}

// –ü–æ–∫–∞–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞
function showLastCitySuggestion(city, searchedAt) {
    const suggestion = document.getElementById('last-city-suggestion');
    const timeAgo = getTimeAgo(new Date(searchedAt));
    
    suggestion.querySelector('p').textContent = 
        `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ ${city}? (–∏—Å–∫–∞–ª–∏ ${timeAgo})`;
    suggestion.style.display = 'flex';
}

function hideLastCitySuggestion() {
    document.getElementById('last-city-suggestion').style.display = 'none';
}

// –ü–æ–∫–∞–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
function showSearchHistory(history) {
    const historySection = document.getElementById('search-history');
    const historyList = document.getElementById('history-list');
    const toggleBtn = document.getElementById('toggle-history');
    
    historyList.innerHTML = '';
    
    history.forEach(search => {
        const item = document.createElement('div');
        item.className = 'history-item';
        item.innerHTML = `
            <div>
                <div class="history-city">${search.city}</div>
                <div class="history-temp">${Math.round(search.temperature)}¬∞C - ${search.description}</div>
            </div>
            <div class="history-time">${getTimeAgo(new Date(search.searched_at))}</div>
        `;
        
        item.addEventListener('click', () => {
            document.getElementById('city-input').value = search.city;
            searchWeather(search.city);
        });
        
        historyList.appendChild(item);
    });
    
    historySection.style.display = 'block';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏–∏
    toggleBtn.onclick = function() {
        const isHidden = historyList.style.display === 'none';
        historyList.style.display = isHidden ? 'block' : 'none';
        toggleBtn.textContent = isHidden ? '–°–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é' : '–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é';
    };
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    historyList.style.display = 'none';
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (showLoading, showWeather, showError, getWeatherEmoji) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...

function showLoading() {
    const resultDiv = document.getElementById('weather-result');
    resultDiv.innerHTML = `
        <div class="loading">
            <p>üå§Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã...</p>
        </div>
    `;
    resultDiv.classList.add('show');
}

function showWeather(data) {
    const resultDiv = document.getElementById('weather-result');
    const weatherEmoji = getWeatherEmoji(data.description);
    
    resultDiv.innerHTML = `
        <div class="weather-card">
            <h3>${weatherEmoji} ${data.city}</h3>
            <div class="weather-main">
                <div class="temperature">
                    <span class="temp-value">${Math.round(data.temperature)}¬∞C</span>
                    <span class="feels-like">–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${Math.round(data.feels_like)}¬∞C</span>
                </div>
                <div class="weather-desc">${data.description}</div>
            </div>
            <div class="weather-details">
                <div class="detail-item">
                    <span class="detail-label">üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</span>
                    <span class="detail-value">${data.humidity}%</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">üí® –í–µ—Ç–µ—Ä:</span>
                    <span class="detail-value">${data.wind_speed} –∫–º/—á</span>
                </div>
            </div>
            <div class="timestamp">
                –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date(data.timestamp).toLocaleString('ru-RU')}
            </div>
        </div>
    `;
    resultDiv.classList.add('show');
}

function showError(message) {
    const resultDiv = document.getElementById('weather-result');
    resultDiv.innerHTML = `
        <div class="error">
            <p>‚ùå ${message}</p>
            <p><small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ</small></p>
        </div>
    `;
    resultDiv.classList.add('show');
}

function getWeatherEmoji(description) {
    const emojiMap = {
        '—è—Å–Ω–æ': '‚òÄÔ∏è',
        '–æ–±–ª–∞—á–Ω–æ': '‚òÅÔ∏è',
        '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': '‚õÖ',
        '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': 'üå§Ô∏è',
        '–ø–∞—Å–º—É—Ä–Ω–æ': '‚òÅÔ∏è',
        '–¥–æ–∂–¥—å': 'üåßÔ∏è',
        '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å': 'üå¶Ô∏è',
        '–ª–∏–≤–µ–Ω—å': '‚õàÔ∏è',
        '—Å–Ω–µ–≥': '‚ùÑÔ∏è',
        '—Ç—É–º–∞–Ω': 'üå´Ô∏è',
        '–≥—Ä–æ–∑–∞': '‚õàÔ∏è'
    };
    
    const desc = description.toLowerCase();
    for (const [key, emoji] of Object.entries(emojiMap)) {
        if (desc.includes(key)) {
            return emoji;
        }
    }
    
    return 'üå§Ô∏è';
}

function getTimeAgo(date) {
    const now = new Date();
    const diffInSeconds = Math.floor((now - date) / 1000);
    
    if (diffInSeconds < 60) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} —á –Ω–∞–∑–∞–¥`;
    
    return `${Math.floor(diffInSeconds / 86400)} –¥–Ω –Ω–∞–∑–∞–¥`;
}
